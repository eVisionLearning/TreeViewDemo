@model IEnumerable<TreeViewDemo.Models.Category>

@{
    ViewData["Title"] = "Index";
    Category parent = ViewBag.parent;
}

@if (parent == null)
{
    <h1>List of Top Level Categories</h1>
}
else
{
    <h1>List of Child Categories in <small class="text-primary">@parent.Name</small> </h1>
    <a class="btn btn-sm btn-info" href="/Categories">Goto Top Level Categories</a>
}

<p>
    <a asp-action="Create" asp-route-parentId="@(parent?.Id)">Create @(parent == null ? "Top Level Category" : $"Child Category in {parent.Name}")</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Parent</th>
            <th>Childs</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @if (item.Status)
                    {
                        <span class="badge bg-success text-white"> Active </span>
                    }
                    else
                    {
                        <span class="badge bg-danger text-white">Not Active</span>
                    }
                </td>
                <td>@(item.Parent?.Name ?? "Top Level")</td>
                <td><a href="/Categories?ParentId=@item.Id">@item.Childs.Count</a></td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                    <a asp-action="Childs" asp-route-id="@item.Id">Childs</a> |
                    <a asp-action="Create" asp-route-ParentId="@item.Id">Add Child</a>
                </td>
            </tr>
        }
    </tbody>
</table>

